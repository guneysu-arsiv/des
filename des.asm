; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	c:\gh\des\des.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_sbox
PUBLIC	_e_permtab
PUBLIC	_p_permtab
PUBLIC	_ip_permtab
PUBLIC	_inv_ip_permtab
PUBLIC	_pc1_permtab
PUBLIC	_pc2_permtab
PUBLIC	_splitin6bitword_permtab
PUBLIC	_shiftkey_permtab
PUBLIC	_shiftkeyinv_permtab
_DATA	SEGMENT
_sbox	DB	0e4H
	DB	0d1H
	DB	02fH
	DB	0b8H
	DB	03aH
	DB	06cH
	DB	059H
	DB	07H
	DB	0fH
	DB	074H
	DB	0e2H
	DB	0d1H
	DB	0a6H
	DB	0cbH
	DB	095H
	DB	038H
	DB	041H
	DB	0e8H
	DB	0d6H
	DB	02bH
	DB	0fcH
	DB	097H
	DB	03aH
	DB	050H
	DB	0fcH
	DB	082H
	DB	049H
	DB	017H
	DB	05bH
	DB	03eH
	DB	0a0H
	DB	06dH
	DB	0f1H
	DB	08eH
	DB	06bH
	DB	034H
	DB	097H
	DB	02dH
	DB	0c0H
	DB	05aH
	DB	03dH
	DB	047H
	DB	0f2H
	DB	08eH
	DB	0c0H
	DB	01aH
	DB	069H
	DB	0b5H
	DB	0eH
	DB	07bH
	DB	0a4H
	DB	0d1H
	DB	058H
	DB	0c6H
	DB	093H
	DB	02fH
	DB	0d8H
	DB	0a1H
	DB	03fH
	DB	042H
	DB	0b6H
	DB	07cH
	DB	05H
	DB	0e9H
	DB	0a0H
	DB	09eH
	DB	063H
	DB	0f5H
	DB	01dH
	DB	0c7H
	DB	0b4H
	DB	028H
	DB	0d7H
	DB	09H
	DB	034H
	DB	06aH
	DB	028H
	DB	05eH
	DB	0cbH
	DB	0f1H
	DB	0d6H
	DB	049H
	DB	08fH
	DB	030H
	DB	0b1H
	DB	02cH
	DB	05aH
	DB	0e7H
	DB	01aH
	DB	0d0H
	DB	069H
	DB	087H
	DB	04fH
	DB	0e3H
	DB	0b5H
	DB	02cH
	DB	07dH
	DB	0e3H
	DB	06H
	DB	09aH
	DB	012H
	DB	085H
	DB	0bcH
	DB	04fH
	DB	0d8H
	DB	0b5H
	DB	06fH
	DB	03H
	DB	047H
	DB	02cH
	DB	01aH
	DB	0e9H
	DB	0a6H
	DB	090H
	DB	0cbH
	DB	07dH
	DB	0f1H
	DB	03eH
	DB	052H
	DB	084H
	DB	03fH
	DB	06H
	DB	0a1H
	DB	0d8H
	DB	094H
	DB	05bH
	DB	0c7H
	DB	02eH
	DB	02cH
	DB	041H
	DB	07aH
	DB	0b6H
	DB	085H
	DB	03fH
	DB	0d0H
	DB	0e9H
	DB	0ebH
	DB	02cH
	DB	047H
	DB	0d1H
	DB	050H
	DB	0faH
	DB	039H
	DB	086H
	DB	042H
	DB	01bH
	DB	0adH
	DB	078H
	DB	0f9H
	DB	0c5H
	DB	063H
	DB	0eH
	DB	0b8H
	DB	0c7H
	DB	01eH
	DB	02dH
	DB	06fH
	DB	09H
	DB	0a4H
	DB	053H
	DB	0c1H
	DB	0afH
	DB	092H
	DB	068H
	DB	0dH
	DB	034H
	DB	0e7H
	DB	05bH
	DB	0afH
	DB	042H
	DB	07cH
	DB	095H
	DB	061H
	DB	0deH
	DB	0bH
	DB	038H
	DB	09eH
	DB	0f5H
	DB	028H
	DB	0c3H
	DB	070H
	DB	04aH
	DB	01dH
	DB	0b6H
	DB	043H
	DB	02cH
	DB	095H
	DB	0faH
	DB	0beH
	DB	017H
	DB	060H
	DB	08dH
	DB	04bH
	DB	02eH
	DB	0f0H
	DB	08dH
	DB	03cH
	DB	097H
	DB	05aH
	DB	061H
	DB	0d0H
	DB	0b7H
	DB	049H
	DB	01aH
	DB	0e3H
	DB	05cH
	DB	02fH
	DB	086H
	DB	014H
	DB	0bdH
	DB	0c3H
	DB	07eH
	DB	0afH
	DB	068H
	DB	05H
	DB	092H
	DB	06bH
	DB	0d8H
	DB	014H
	DB	0a7H
	DB	095H
	DB	0fH
	DB	0e2H
	DB	03cH
	DB	0d2H
	DB	084H
	DB	06fH
	DB	0b1H
	DB	0a9H
	DB	03eH
	DB	050H
	DB	0c7H
	DB	01fH
	DB	0d8H
	DB	0a3H
	DB	074H
	DB	0c5H
	DB	06bH
	DB	0eH
	DB	092H
	DB	07bH
	DB	041H
	DB	09cH
	DB	0e2H
	DB	06H
	DB	0adH
	DB	0f3H
	DB	058H
	DB	021H
	DB	0e7H
	DB	04aH
	DB	08dH
	DB	0fcH
	DB	090H
	DB	035H
	DB	06bH
_e_permtab DB	04H
	DB	06H
	DB	020H
	DB	01H
	DB	02H
	DB	03H
	DB	04H
	DB	05H
	DB	04H
	DB	05H
	DB	06H
	DB	07H
	DB	08H
	DB	09H
	DB	08H
	DB	09H
	DB	0aH
	DB	0bH
	DB	0cH
	DB	0dH
	DB	0cH
	DB	0dH
	DB	0eH
	DB	0fH
	DB	010H
	DB	011H
	DB	010H
	DB	011H
	DB	012H
	DB	013H
	DB	014H
	DB	015H
	DB	014H
	DB	015H
	DB	016H
	DB	017H
	DB	018H
	DB	019H
	DB	018H
	DB	019H
	DB	01aH
	DB	01bH
	DB	01cH
	DB	01dH
	DB	01cH
	DB	01dH
	DB	01eH
	DB	01fH
	DB	020H
	DB	01H
	ORG $+2
_p_permtab DB	04H
	DB	04H
	DB	010H
	DB	07H
	DB	014H
	DB	015H
	DB	01dH
	DB	0cH
	DB	01cH
	DB	011H
	DB	01H
	DB	0fH
	DB	017H
	DB	01aH
	DB	05H
	DB	012H
	DB	01fH
	DB	0aH
	DB	02H
	DB	08H
	DB	018H
	DB	0eH
	DB	020H
	DB	01bH
	DB	03H
	DB	09H
	DB	013H
	DB	0dH
	DB	01eH
	DB	06H
	DB	016H
	DB	0bH
	DB	04H
	DB	019H
	ORG $+2
_ip_permtab DB	08H
	DB	08H
	DB	03aH
	DB	032H
	DB	02aH
	DB	022H
	DB	01aH
	DB	012H
	DB	0aH
	DB	02H
	DB	03cH
	DB	034H
	DB	02cH
	DB	024H
	DB	01cH
	DB	014H
	DB	0cH
	DB	04H
	DB	03eH
	DB	036H
	DB	02eH
	DB	026H
	DB	01eH
	DB	016H
	DB	0eH
	DB	06H
	DB	040H
	DB	038H
	DB	030H
	DB	028H
	DB	020H
	DB	018H
	DB	010H
	DB	08H
	DB	039H
	DB	031H
	DB	029H
	DB	021H
	DB	019H
	DB	011H
	DB	09H
	DB	01H
	DB	03bH
	DB	033H
	DB	02bH
	DB	023H
	DB	01bH
	DB	013H
	DB	0bH
	DB	03H
	DB	03dH
	DB	035H
	DB	02dH
	DB	025H
	DB	01dH
	DB	015H
	DB	0dH
	DB	05H
	DB	03fH
	DB	037H
	DB	02fH
	DB	027H
	DB	01fH
	DB	017H
	DB	0fH
	DB	07H
	ORG $+6
_inv_ip_permtab DB 08H
	DB	08H
	DB	028H
	DB	08H
	DB	030H
	DB	010H
	DB	038H
	DB	018H
	DB	040H
	DB	020H
	DB	027H
	DB	07H
	DB	02fH
	DB	0fH
	DB	037H
	DB	017H
	DB	03fH
	DB	01fH
	DB	026H
	DB	06H
	DB	02eH
	DB	0eH
	DB	036H
	DB	016H
	DB	03eH
	DB	01eH
	DB	025H
	DB	05H
	DB	02dH
	DB	0dH
	DB	035H
	DB	015H
	DB	03dH
	DB	01dH
	DB	024H
	DB	04H
	DB	02cH
	DB	0cH
	DB	034H
	DB	014H
	DB	03cH
	DB	01cH
	DB	023H
	DB	03H
	DB	02bH
	DB	0bH
	DB	033H
	DB	013H
	DB	03bH
	DB	01bH
	DB	022H
	DB	02H
	DB	02aH
	DB	0aH
	DB	032H
	DB	012H
	DB	03aH
	DB	01aH
	DB	021H
	DB	01H
	DB	029H
	DB	09H
	DB	031H
	DB	011H
	DB	039H
	DB	019H
	ORG $+2
_pc1_permtab DB	08H
	DB	07H
	DB	039H
	DB	031H
	DB	029H
	DB	021H
	DB	019H
	DB	011H
	DB	09H
	DB	01H
	DB	03aH
	DB	032H
	DB	02aH
	DB	022H
	DB	01aH
	DB	012H
	DB	0aH
	DB	02H
	DB	03bH
	DB	033H
	DB	02bH
	DB	023H
	DB	01bH
	DB	013H
	DB	0bH
	DB	03H
	DB	03cH
	DB	034H
	DB	02cH
	DB	024H
	DB	03fH
	DB	037H
	DB	02fH
	DB	027H
	DB	01fH
	DB	017H
	DB	0fH
	DB	07H
	DB	03eH
	DB	036H
	DB	02eH
	DB	026H
	DB	01eH
	DB	016H
	DB	0eH
	DB	06H
	DB	03dH
	DB	035H
	DB	02dH
	DB	025H
	DB	01dH
	DB	015H
	DB	0dH
	DB	05H
	DB	01cH
	DB	014H
	DB	0cH
	DB	04H
	ORG $+2
_pc2_permtab DB	07H
	DB	06H
	DB	0eH
	DB	011H
	DB	0bH
	DB	018H
	DB	01H
	DB	05H
	DB	03H
	DB	01cH
	DB	0fH
	DB	06H
	DB	015H
	DB	0aH
	DB	017H
	DB	013H
	DB	0cH
	DB	04H
	DB	01aH
	DB	08H
	DB	010H
	DB	07H
	DB	01bH
	DB	014H
	DB	0dH
	DB	02H
	DB	029H
	DB	034H
	DB	01fH
	DB	025H
	DB	02fH
	DB	037H
	DB	01eH
	DB	028H
	DB	033H
	DB	02dH
	DB	021H
	DB	030H
	DB	02cH
	DB	031H
	DB	027H
	DB	038H
	DB	022H
	DB	035H
	DB	02eH
	DB	02aH
	DB	032H
	DB	024H
	DB	01dH
	DB	020H
	ORG $+6
_splitin6bitword_permtab DB 08H
	DB	08H
	DB	040H
	DB	040H
	DB	01H
	DB	06H
	DB	02H
	DB	03H
	DB	04H
	DB	05H
	DB	040H
	DB	040H
	DB	07H
	DB	0cH
	DB	08H
	DB	09H
	DB	0aH
	DB	0bH
	DB	040H
	DB	040H
	DB	0dH
	DB	012H
	DB	0eH
	DB	0fH
	DB	010H
	DB	011H
	DB	040H
	DB	040H
	DB	013H
	DB	018H
	DB	014H
	DB	015H
	DB	016H
	DB	017H
	DB	040H
	DB	040H
	DB	019H
	DB	01eH
	DB	01aH
	DB	01bH
	DB	01cH
	DB	01dH
	DB	040H
	DB	040H
	DB	01fH
	DB	024H
	DB	020H
	DB	021H
	DB	022H
	DB	023H
	DB	040H
	DB	040H
	DB	025H
	DB	02aH
	DB	026H
	DB	027H
	DB	028H
	DB	029H
	DB	040H
	DB	040H
	DB	02bH
	DB	030H
	DB	02cH
	DB	02dH
	DB	02eH
	DB	02fH
	ORG $+2
_shiftkey_permtab DB 07H
	DB	07H
	DB	02H
	DB	03H
	DB	04H
	DB	05H
	DB	06H
	DB	07H
	DB	08H
	DB	09H
	DB	0aH
	DB	0bH
	DB	0cH
	DB	0dH
	DB	0eH
	DB	0fH
	DB	010H
	DB	011H
	DB	012H
	DB	013H
	DB	014H
	DB	015H
	DB	016H
	DB	017H
	DB	018H
	DB	019H
	DB	01aH
	DB	01bH
	DB	01cH
	DB	01H
	DB	01eH
	DB	01fH
	DB	020H
	DB	021H
	DB	022H
	DB	023H
	DB	024H
	DB	025H
	DB	026H
	DB	027H
	DB	028H
	DB	029H
	DB	02aH
	DB	02bH
	DB	02cH
	DB	02dH
	DB	02eH
	DB	02fH
	DB	030H
	DB	031H
	DB	032H
	DB	033H
	DB	034H
	DB	035H
	DB	036H
	DB	037H
	DB	038H
	DB	01dH
	ORG $+2
_shiftkeyinv_permtab DB 07H
	DB	07H
	DB	01cH
	DB	01H
	DB	02H
	DB	03H
	DB	04H
	DB	05H
	DB	06H
	DB	07H
	DB	08H
	DB	09H
	DB	0aH
	DB	0bH
	DB	0cH
	DB	0dH
	DB	0eH
	DB	0fH
	DB	010H
	DB	011H
	DB	012H
	DB	013H
	DB	014H
	DB	015H
	DB	016H
	DB	017H
	DB	018H
	DB	019H
	DB	01aH
	DB	01bH
	DB	038H
	DB	01dH
	DB	01eH
	DB	01fH
	DB	020H
	DB	021H
	DB	022H
	DB	023H
	DB	024H
	DB	025H
	DB	026H
	DB	027H
	DB	028H
	DB	029H
	DB	02aH
	DB	02bH
	DB	02cH
	DB	02dH
	DB	02eH
	DB	02fH
	DB	030H
	DB	031H
	DB	032H
	DB	033H
	DB	034H
	DB	035H
	DB	036H
	DB	037H
_DATA	ENDS
PUBLIC	@des_str2key@8
; Function compile flags: /Ogspy
;	COMDAT @des_str2key@8
_TEXT	SEGMENT
@des_str2key@8 PROC					; COMDAT
; _str$ = ecx
; _key$ = edx
; File c:\gh\des\des.c
; Line 161
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 166
	xor	edi, edi
$LL14@:
; Line 167
	mov	eax, edi
	imul	eax, 3
; Line 168
	mov	esi, DWORD PTR [eax+ecx]
	bswap	esi
; Line 169
	cmp	edi, 1
	jne	SHORT $LN4@
; Line 170
	rol	esi, 4
$LN4@:
; Line 172
	push	4
	xor	eax, eax
	pop	ebx
$LL3@:
; Line 174
	mov	ebp, esi
	and	ebp, -33554432				; fe000000H
	or	eax, ebp
	rol	eax, 8
; Line 175
	shl	esi, 7
	dec	ebx
	jne	SHORT $LL3@
; Line 177
	bswap	eax
	mov	DWORD PTR [edx+edi*4], eax
	inc	edi
	cmp	edi, 2
	jl	SHORT $LL14@
; Line 179
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	ret	0
@des_str2key@8 ENDP
_TEXT	ENDS
PUBLIC	@permute@12
; Function compile flags: /Ogspy
;	COMDAT @permute@12
_TEXT	SEGMENT
_input$ = -8						; size = 4
tv144 = -4						; size = 4
tv65 = 8						; size = 4
_out$ = 8						; size = 4
@permute@12 PROC					; COMDAT
; _ptbl$ = ecx
; _input$ = edx
; Line 182
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ecx
; Line 187
	mov	al, BYTE PTR [ecx+1]
	push	esi
	mov	DWORD PTR _input$[ebp], edx
; Line 188
	lea	esi, DWORD PTR [ecx+2]
; Line 190
	test	al, al
	je	SHORT $LN5@
; Line 187
	movzx	eax, al
	push	ebx
	push	edi
	mov	edi, DWORD PTR _out$[ebp]
	mov	DWORD PTR tv144[ebp], eax
$LL14@:
; Line 191
	xor	dl, dl
	mov	DWORD PTR tv65[ebp], 8
$LL4@:
; Line 193
	mov	al, BYTE PTR [esi]
	dec	al
; Line 195
	movzx	eax, al
	mov	ecx, eax
	inc	esi
	add	dl, dl
	and	ecx, -2147483641			; 80000007H
	jns	SHORT $LN15@
	dec	ecx
	or	ecx, -8					; fffffff8H
	inc	ecx
$LN15@:
	mov	ebx, 128				; 00000080H
	sar	ebx, cl
	mov	ecx, DWORD PTR _input$[ebp]
	shr	eax, 3
	mov	al, BYTE PTR [eax+ecx]
	test	bl, al
	je	SHORT $LN3@
; Line 196
	or	dl, 1
$LN3@:
; Line 192
	dec	DWORD PTR tv65[ebp]
	jne	SHORT $LL4@
; Line 199
	mov	BYTE PTR [edi], dl
	inc	edi
	dec	DWORD PTR tv144[ebp]
	jne	SHORT $LL14@
	pop	edi
	pop	ebx
$LN5@:
	pop	esi
; Line 201
	leave
	ret	4
@permute@12 ENDP
_TEXT	ENDS
PUBLIC	@shiftkey@8
; Function compile flags: /Ogspy
;	COMDAT @shiftkey@8
_TEXT	SEGMENT
_tmp_key$ = -8						; size = 8
@shiftkey@8 PROC					; COMDAT
; _key_in$ = ecx
; _type$ = edx
; Line 204
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ecx
	push	esi
	push	edi
; Line 207
	mov	esi, ecx
	lea	edi, DWORD PTR _tmp_key$[ebp]
	movsd
	movsw
	movsb
	pop	edi
	pop	esi
; Line 210
	push	ecx
	test	edx, edx
	lea	edx, DWORD PTR _tmp_key$[ebp]
	mov	ecx, OFFSET _shiftkey_permtab
	je	SHORT $LN5@
; Line 212
	mov	ecx, OFFSET _shiftkeyinv_permtab
$LN5@:
	call	@permute@12
; Line 214
	leave
	ret	0
@shiftkey@8 ENDP
_TEXT	ENDS
PUBLIC	@splitin6bitwords@4
; Function compile flags: /Ogspy
;	COMDAT @splitin6bitwords@4
_TEXT	SEGMENT
_t$ = -8						; size = 8
@splitin6bitwords@4 PROC				; COMDAT
; _x$ = ecx
; Line 217
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ecx
; Line 220
	movzx	edx, WORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR _t$[ebp+4], edx
; Line 222
	push	ecx
	lea	edx, DWORD PTR _t$[ebp]
	mov	ecx, OFFSET _splitin6bitword_permtab
	mov	DWORD PTR _t$[ebp], eax
	call	@permute@12
; Line 223
	leave
	ret	0
@splitin6bitwords@4 ENDP
_TEXT	ENDS
PUBLIC	@substitute@8
; Function compile flags: /Ogspy
;	COMDAT @substitute@8
_TEXT	SEGMENT
@substitute@8 PROC					; COMDAT
; _a$ = cl
; _sbp$ = edx
; Line 229
	movzx	eax, cl
	shr	eax, 1
	mov	al, BYTE PTR [eax+edx]
; Line 230
	test	cl, 1
	je	SHORT $LN3@
	and	al, 15					; 0000000fH
; Line 233
	ret	0
$LN3@:
; Line 230
	shr	al, 4
; Line 233
	ret	0
@substitute@8 ENDP
_TEXT	ENDS
PUBLIC	@des_f@8
; Function compile flags: /Ogspy
;	COMDAT @des_f@8
_TEXT	SEGMENT
_res$ = -24						; size = 8
_tmp_data$ = -24					; size = 8
_R$ = -16						; size = 4
_tmp_key$ = -12						; size = 8
tv271 = -8						; size = 4
_t$ = -4						; size = 4
@des_f@8 PROC						; COMDAT
; _data_in$ = ecx
; _key$ = edx
; Line 237
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
; Line 239
	and	DWORD PTR _t$[ebp], 0
	push	ebx
	push	esi
	mov	esi, ecx
; Line 245
	mov	eax, DWORD PTR [esi+4]
	mov	ebx, DWORD PTR [esi]
	push	edi
	mov	DWORD PTR _R$[ebp], eax
; Line 248
	lea	eax, DWORD PTR _tmp_data$[ebp]
	mov	edi, edx
	push	eax
	lea	edx, DWORD PTR _R$[ebp]
	mov	ecx, OFFSET _e_permtab
	call	@permute@12
; Line 251
	lea	eax, DWORD PTR _tmp_key$[ebp]
	push	eax
	mov	edx, edi
	mov	ecx, OFFSET _pc2_permtab
	call	@permute@12
	push	7
; Line 254
	xor	eax, eax
	pop	edi
$LL6@:
; Line 255
	mov	cl, BYTE PTR _tmp_key$[ebp+eax]
	xor	BYTE PTR _tmp_data$[ebp+eax], cl
	inc	eax
	dec	edi
	jne	SHORT $LL6@
; Line 258
	lea	ecx, DWORD PTR _tmp_data$[ebp]
	call	@splitin6bitwords@4
; Line 259
	mov	edx, OFFSET _sbox
	lea	edi, DWORD PTR _tmp_data$[ebp]
	mov	DWORD PTR tv271[ebp], 8
$LL3@:
; Line 262
	mov	cl, BYTE PTR [edi]
	call	@substitute@8
; Line 263
	mov	ecx, DWORD PTR _t$[ebp]
; Line 264
	movzx	eax, al
	shl	ecx, 4
	or	eax, ecx
; Line 265
	add	edx, 32					; 00000020H
	inc	edi
	dec	DWORD PTR tv271[ebp]
	mov	DWORD PTR _t$[ebp], eax
	jne	SHORT $LL3@
; Line 267
	bswap	eax
	mov	DWORD PTR _t$[ebp], eax
; Line 269
	lea	eax, DWORD PTR _res$[ebp]
	push	eax
	lea	edx, DWORD PTR _t$[ebp]
	mov	ecx, OFFSET _p_permtab
	call	@permute@12
; Line 272
	mov	eax, DWORD PTR _res$[ebp]
	xor	eax, ebx
; Line 275
	mov	DWORD PTR [esi+4], eax
; Line 276
	mov	eax, DWORD PTR _R$[ebp]
	pop	edi
	mov	DWORD PTR [esi], eax
	pop	esi
	pop	ebx
; Line 277
	leave
	ret	0
@des_f@8 ENDP
_TEXT	ENDS
PUBLIC	@start_enc@16
; Function compile flags: /Ogspy
;	COMDAT @start_enc@16
_TEXT	SEGMENT
_key_in$ = 8						; size = 4
_key_out$ = 12						; size = 4
@start_enc@16 PROC					; COMDAT
; _data_in$ = ecx
; _data_out$ = edx
; Line 283
	push	edx
	mov	edx, ecx
	mov	ecx, OFFSET _ip_permtab
	call	@permute@12
; Line 284
	push	DWORD PTR _key_out$[esp-4]
	mov	edx, DWORD PTR _key_in$[esp]
	mov	ecx, OFFSET _pc1_permtab
	call	@permute@12
; Line 285
	ret	8
@start_enc@16 ENDP
_TEXT	ENDS
PUBLIC	@end_enc@8
; Function compile flags: /Ogspy
;	COMDAT @end_enc@8
_TEXT	SEGMENT
@end_enc@8 PROC						; COMDAT
; _data_out$ = ecx
; _data_in$ = edx
; Line 295
	mov	eax, DWORD PTR [edx+4]
	push	esi
	mov	esi, DWORD PTR [edx]
	xor	eax, esi
; Line 296
	xor	esi, eax
; Line 297
	xor	eax, esi
; Line 302
	push	ecx
	mov	ecx, OFFSET _inv_ip_permtab
	mov	DWORD PTR [edx], esi
	mov	DWORD PTR [edx+4], eax
	call	@permute@12
	pop	esi
; Line 303
	ret	0
@end_enc@8 ENDP
_TEXT	ENDS
PUBLIC	@update_key@12
; Function compile flags: /Ogspy
;	COMDAT @update_key@12
_TEXT	SEGMENT
_type$ = 8						; size = 4
@update_key@12 PROC					; COMDAT
; _key$ = ecx
; _rnd_idx$ = dl
; Line 307
	push	ebx
	mov	bl, dl
; Line 308
	mov	edx, DWORD PTR _type$[esp]
	push	esi
	mov	esi, ecx
	call	@shiftkey@8
; Line 310
	xor	eax, eax
	inc	eax
	mov	cl, bl
	shl	eax, cl
	test	eax, 32508				; 00007efcH
	je	SHORT $LN1@
; Line 311
	mov	edx, DWORD PTR _type$[esp+4]
	mov	ecx, esi
	call	@shiftkey@8
$LN1@:
; Line 313
	pop	esi
	pop	ebx
	ret	4
@update_key@12 ENDP
_TEXT	ENDS
PUBLIC	@des_enc@12
; Function compile flags: /Ogspy
;	COMDAT @des_enc@12
_TEXT	SEGMENT
_tmp_data$ = -16					; size = 8
_tmp_key$ = -8						; size = 8
_out$ = 8						; size = 4
@des_enc@12 PROC					; COMDAT
; _key$ = ecx
; _in$ = edx
; Line 315
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, edx
	push	ebx
; Line 319
	lea	edx, DWORD PTR _tmp_key$[ebp]
	push	edx
	push	ecx
	lea	edx, DWORD PTR _tmp_data$[ebp]
	mov	ecx, eax
	call	@start_enc@16
; Line 321
	xor	bl, bl
$LL3@:
; Line 322
	push	0
	mov	dl, bl
	lea	ecx, DWORD PTR _tmp_key$[ebp]
	call	@update_key@12
; Line 323
	lea	edx, DWORD PTR _tmp_key$[ebp]
	lea	ecx, DWORD PTR _tmp_data$[ebp]
	call	@des_f@8
	inc	bl
	cmp	bl, 16					; 00000010H
	jb	SHORT $LL3@
; Line 325
	mov	ecx, DWORD PTR _out$[ebp]
	lea	edx, DWORD PTR _tmp_data$[ebp]
	call	@end_enc@8
	pop	ebx
; Line 326
	leave
	ret	4
@des_enc@12 ENDP
_TEXT	ENDS
PUBLIC	@des_dec@12
; Function compile flags: /Ogspy
;	COMDAT @des_dec@12
_TEXT	SEGMENT
_tmp_data$ = -16					; size = 8
_tmp_key$ = -8						; size = 8
_out$ = 8						; size = 4
@des_dec@12 PROC					; COMDAT
; _key$ = ecx
; _in$ = edx
; Line 330
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, edx
	push	ebx
; Line 334
	lea	edx, DWORD PTR _tmp_key$[ebp]
	push	edx
	push	ecx
	lea	edx, DWORD PTR _tmp_data$[ebp]
	mov	ecx, eax
	call	@start_enc@16
; Line 336
	mov	bl, 15					; 0000000fH
$LL3@:
; Line 337
	lea	edx, DWORD PTR _tmp_key$[ebp]
	lea	ecx, DWORD PTR _tmp_data$[ebp]
	call	@des_f@8
; Line 338
	push	1
	mov	dl, bl
	lea	ecx, DWORD PTR _tmp_key$[ebp]
	call	@update_key@12
	dec	bl
	jns	SHORT $LL3@
; Line 340
	mov	ecx, DWORD PTR _out$[ebp]
	lea	edx, DWORD PTR _tmp_data$[ebp]
	call	@end_enc@8
	pop	ebx
; Line 341
	leave
	ret	4
@des_dec@12 ENDP
_TEXT	ENDS
PUBLIC	@des3_enc@20
; Function compile flags: /Ogspy
;	COMDAT @des3_enc@20
_TEXT	SEGMENT
_c2$ = -16						; size = 8
_c1$ = -8						; size = 8
_key1$ = 8						; size = 4
_key2$ = 12						; size = 4
_key3$ = 16						; size = 4
@des3_enc@20 PROC					; COMDAT
; _out$ = ecx
; _in$ = edx
; Line 346
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
; Line 349
	push	DWORD PTR _key1$[ebp]
	mov	esi, ecx
	lea	ecx, DWORD PTR _c1$[ebp]
	call	@des_enc@12
; Line 350
	push	DWORD PTR _key2$[ebp]
	lea	edx, DWORD PTR _c1$[ebp]
	lea	ecx, DWORD PTR _c2$[ebp]
	call	@des_dec@12
; Line 351
	push	DWORD PTR _key3$[ebp]
	lea	edx, DWORD PTR _c2$[ebp]
	mov	ecx, esi
	call	@des_enc@12
	pop	esi
; Line 352
	leave
	ret	12					; 0000000cH
@des3_enc@20 ENDP
_TEXT	ENDS
PUBLIC	@des3_dec@20
; Function compile flags: /Ogspy
;	COMDAT @des3_dec@20
_TEXT	SEGMENT
_c2$ = -16						; size = 8
_c1$ = -8						; size = 8
_key1$ = 8						; size = 4
_key2$ = 12						; size = 4
_key3$ = 16						; size = 4
@des3_dec@20 PROC					; COMDAT
; _out$ = ecx
; _in$ = edx
; Line 357
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
; Line 360
	push	DWORD PTR _key3$[ebp]
	mov	esi, ecx
	lea	ecx, DWORD PTR _c1$[ebp]
	call	@des_dec@12
; Line 361
	push	DWORD PTR _key2$[ebp]
	lea	edx, DWORD PTR _c1$[ebp]
	lea	ecx, DWORD PTR _c2$[ebp]
	call	@des_enc@12
; Line 362
	push	DWORD PTR _key1$[ebp]
	lea	edx, DWORD PTR _c2$[ebp]
	mov	ecx, esi
	call	@des_dec@12
	pop	esi
; Line 363
	leave
	ret	12					; 0000000cH
@des3_dec@20 ENDP
_TEXT	ENDS
END
