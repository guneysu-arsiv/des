; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	F:\gh\des\des_cbc.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_memxor
; Function compile flags: /Ogspy
;	COMDAT _memxor
_TEXT	SEGMENT
_dst$ = 8						; size = 4
_src$ = 12						; size = 4
_len$ = 16						; size = 4
_memxor	PROC						; COMDAT
; File f:\gh\des\des_cbc.c
; Line 9
	xor	edx, edx
	cmp	DWORD PTR _len$[esp-4], edx
	jbe	SHORT $LN1@memxor
	xor	eax, eax
	push	esi
$LL3@memxor:
; Line 10
	mov	ecx, DWORD PTR _dst$[esp]
	mov	esi, DWORD PTR _src$[esp]
	add	ecx, eax
	mov	al, BYTE PTR [eax+esi]
	xor	BYTE PTR [ecx], al
	inc	dl
	movzx	eax, dl
	cmp	eax, DWORD PTR _len$[esp]
	jb	SHORT $LL3@memxor
	pop	esi
$LN1@memxor:
; Line 12
	ret	0
_memxor	ENDP
_TEXT	ENDS
PUBLIC	_blkxor
; Function compile flags: /Ogspy
;	COMDAT _blkxor
_TEXT	SEGMENT
_dst$ = 8						; size = 4
_src$ = 12						; size = 4
_blkxor	PROC						; COMDAT
; Line 19
	mov	eax, DWORD PTR _dst$[esp-4]
	mov	ecx, DWORD PTR _src$[esp-4]
	push	esi
	push	8
	sub	ecx, eax
	pop	esi
$LL3@blkxor:
; Line 20
	mov	dl, BYTE PTR [ecx+eax]
	xor	BYTE PTR [eax], dl
	inc	eax
	dec	esi
	jne	SHORT $LL3@blkxor
	pop	esi
; Line 22
	ret	0
_blkxor	ENDP
_TEXT	ENDS
PUBLIC	_blkcpy
; Function compile flags: /Ogspy
;	COMDAT _blkcpy
_TEXT	SEGMENT
_dst$ = 8						; size = 4
_src$ = 12						; size = 4
_blkcpy	PROC						; COMDAT
; Line 29
	mov	eax, DWORD PTR _dst$[esp-4]
	mov	ecx, DWORD PTR _src$[esp-4]
	push	esi
	push	8
	sub	ecx, eax
	pop	esi
$LL3@blkcpy:
; Line 30
	mov	dl, BYTE PTR [ecx+eax]
	mov	BYTE PTR [eax], dl
	inc	eax
	dec	esi
	jne	SHORT $LL3@blkcpy
	pop	esi
; Line 32
	ret	0
_blkcpy	ENDP
_TEXT	ENDS
PUBLIC	_blkclr
; Function compile flags: /Ogspy
;	COMDAT _blkclr
_TEXT	SEGMENT
_blk$ = 8						; size = 4
_blkclr	PROC						; COMDAT
; Line 36
	push	edi
; Line 40
	mov	edi, DWORD PTR _blk$[esp]
	xor	eax, eax
	stosd
	stosd
	pop	edi
; Line 42
	ret	0
_blkclr	ENDP
_TEXT	ENDS
PUBLIC	_des_cbc_enc
EXTRN	_memcpy:PROC
; Function compile flags: /Ogspy
;	COMDAT _des_cbc_enc
_TEXT	SEGMENT
_t$ = -8						; size = 8
_key$ = 8						; size = 4
_data_in$ = 12						; size = 4
_data_out$ = 16						; size = 4
_len$ = 20						; size = 4
_v$ = 24						; size = 4
_des_cbc_enc PROC					; COMDAT
; Line 47
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ecx
	push	ebx
; Line 68
	mov	ebx, DWORD PTR _data_out$[ebp]
	push	esi
	mov	esi, DWORD PTR _data_in$[ebp]
	push	edi
	sub	ebx, esi
$LL3@des_cbc_en:
; Line 57
	xor	eax, eax
	lea	edi, DWORD PTR _t$[ebp]
	stosd
	stosd
; Line 59
	mov	edi, DWORD PTR _len$[ebp]
	cmp	edi, 8
	jbe	SHORT $LN6@des_cbc_en
	push	8
	pop	edi
$LN6@des_cbc_en:
; Line 60
	push	edi
	lea	eax, DWORD PTR _t$[ebp]
	push	esi
	push	eax
	call	_memcpy
; Line 62
	push	edi
	push	DWORD PTR _v$[ebp]
	lea	eax, DWORD PTR _t$[ebp]
	push	eax
	call	_memxor
; Line 64
	lea	eax, DWORD PTR [ebx+esi]
	push	eax
	push	DWORD PTR _v$[ebp]
	call	_blkcpy
; Line 65
	sub	DWORD PTR _len$[ebp], edi
	add	esp, 32					; 00000020H
; Line 66
	add	esi, 8
; Line 68
	cmp	DWORD PTR _len$[ebp], 0
	jne	SHORT $LL3@des_cbc_en
	pop	edi
	pop	esi
	pop	ebx
; Line 69
	leave
	ret	0
_des_cbc_enc ENDP
_TEXT	ENDS
PUBLIC	_des_cbc_dec
EXTRN	_des_encx:PROC
; Function compile flags: /Ogspy
;	COMDAT _des_cbc_dec
_TEXT	SEGMENT
_ctx$ = -136						; size = 136
_key$ = 8						; size = 4
_r$ = 12						; size = 4
_data_in$ = 12						; size = 4
_data_out$ = 16						; size = 4
_len$ = 20						; size = 4
_v$ = 24						; size = 4
_des_cbc_dec PROC					; COMDAT
; Line 74
	push	ebp
	mov	ebp, esp
	sub	esp, 136				; 00000088H
	push	ebx
; Line 93
	mov	ebx, DWORD PTR _data_out$[ebp]
	push	esi
	mov	esi, DWORD PTR _data_in$[ebp]
	push	edi
	sub	ebx, esi
$LL3@des_cbc_de:
; Line 83
	mov	eax, DWORD PTR _len$[ebp]
	push	8
	pop	ecx
	mov	DWORD PTR _r$[ebp], ecx
	cmp	eax, ecx
	ja	SHORT $LN7@des_cbc_de
	mov	DWORD PTR _r$[ebp], eax
$LN7@des_cbc_de:
; Line 85
	push	1
	lea	edi, DWORD PTR [ebx+esi]
	push	edi
	lea	eax, DWORD PTR _ctx$[ebp]
	push	esi
	push	eax
	call	_des_encx
; Line 87
	push	DWORD PTR _r$[ebp]
	push	DWORD PTR _v$[ebp]
	push	edi
	call	_memxor
; Line 89
	push	esi
	push	DWORD PTR _v$[ebp]
	call	_blkcpy
; Line 90
	mov	eax, DWORD PTR _r$[ebp]
	sub	DWORD PTR _len$[ebp], eax
	add	esp, 36					; 00000024H
; Line 91
	add	esi, 8
; Line 93
	cmp	DWORD PTR _len$[ebp], 0
	jne	SHORT $LL3@des_cbc_de
	pop	edi
	pop	esi
	pop	ebx
; Line 95
	leave
	ret	0
_des_cbc_dec ENDP
_TEXT	ENDS
END
